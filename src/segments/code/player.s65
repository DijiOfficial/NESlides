.proc update_player
    @player_bottom_left_x     = oam + 15
    @player_bottom_left_y     = oam + 12
    @player_bottom_right_x    = oam + 19
    @player_bottom_right_y    = oam + 16
    @player_top_left_x        = oam + 7
    @player_top_left_y        = oam + 4
    @player_top_right_x       = oam + 11
    @player_top_right_y       = oam + 8
    @player_cigar_x           = oam + 3
    @player_cigar_y           = oam

    lda var_player_x                    ; Load player x position
    sta @player_bottom_left_x           ; Set the left sprites to x
    sta @player_top_left_x
    clc
    adc #8                              ; Add 8 for the right sprites
    sta @player_bottom_right_x          ; Set the right sprites to x + 8
    sta @player_top_right_x
    sta @player_cigar_x                 ; Cigar too is a right sprite

    lda var_player_y                    ; Load player y position
    sta @player_top_left_y              ; Set the top sprites to y
    sta @player_top_right_y
    sta @player_cigar_y                 ; Cigar is also a top sprite
    clc
    adc #8                              ; Add 8 for the bottom sprites
    sta @player_bottom_left_y           ; Set the bottom sprites to y + 8   
    sta @player_bottom_right_y

    jsr check_change_slide

@return:
    rts                                 ; return
.endproc

.proc animate_player
    jsr animate_movement
    jsr animate_cigar
    rts
.endproc

.proc animate_movement
    ON_BUTTON_PRESS PAD_L, ANIMATE_WALK
    ON_BUTTON_PRESS PAD_R, ANIMATE_WALK
    ON_BUTTON_PRESS PAD_U, ANIMATE_WALK
    ON_BUTTON_PRESS PAD_D, ANIMATE_WALK
    rts
.endproc

.proc animate_cigar
    TIMED_FLIP_FLOP CIGAR_LEFT, CIGAR_RIGHT, CIGAR_SPEED
    rts
.endproc

;===================================================================================================
; Check if the player is within the door
;===================================================================================================
.proc check_change_slide
; First right door
    lda var_player_x
    ; sec
    ; sbc #240 
    ; bmi @continue ; if x < 240  ; this does not work because 0 - 240 is smaller than (-128) which results in a positive number. The more you know
    cmp #240      ; Compare A with 240
    bcc @continue ; Branch if A < 240 (Carry = 0)

    lda var_player_y
    sec
    sbc #112
    bmi @continue ; if y < 112

    sec
    sbc #128
    bpl @continue   ; if y >= 128

    ;we are in the door trigger
    lda #24
    sta var_player_x
    LOAD_NEXT_SLIDE

@continue:
; Now The left door
    lda var_player_x
    cmp #8
    bcs @return

    lda var_player_y
    sec
    sbc #112
    bmi @return ; if y < 112

    sec
    sbc #128
    bpl @return   ; if y >= 128

    ;we are in the door trigger
    lda #216
    sta var_player_x
    LOAD_PREVIOUS_SLIDE

@return:
    rts
.endproc
